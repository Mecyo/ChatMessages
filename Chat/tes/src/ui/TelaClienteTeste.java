/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Desktop;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 *
 * @author emersant
 */
public class TelaClienteTeste extends javax.swing.JFrame{

    /**
	 * 
	 */
	private static final long serialVersionUID = 8268656074867817327L;
	private long tamanhoPermitidoKB = 5120; //Igual a 5MB
    private Arquivo arquivo;
	private Boolean conectado = false;
	private Boolean enviarArquivo = true;
    private Integer portaPadrao;
    private String servidorPadrao;
    private String nomeUsuario = "";
    private Cliente cliente;
    private String userSelecionado = "Mecyo";
    private DefaultListModel<String> model;
    /**
     * Creates new form TelaServidor
     * @param porta
     * @param servidor
     */
    public TelaClienteTeste(Integer porta, String servidor) {
        super("Chat Cliente");
        portaPadrao = porta;
        servidorPadrao = servidor;
        initComponents();
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setSize(600, 700);
        setVisible(true);
        textNomeAndMsg.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelNorte = new javax.swing.JPanel();
        panelConexao = new javax.swing.JPanel();
        labelServidor = new javax.swing.JLabel();
        labelPorta = new javax.swing.JLabel();
        textServidor = new javax.swing.JTextField();
        textPorta = new javax.swing.JTextField();
        textNomeAndMsg = new javax.swing.JTextField();
        labelNome = new javax.swing.JLabel();
        buttonEnviar = new javax.swing.JButton();
        panelChat = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textChat = new javax.swing.JTextPane();
        panelListaUser = new javax.swing.JPanel();
        listaUserOnline = new javax.swing.JList<>();
        panelSul = new javax.swing.JPanel();
        buttonLogin = new javax.swing.JButton();
        buttonLogout = new javax.swing.JButton();
        buttonOnlines = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu = new javax.swing.JMenu();
        menuEnviar = new javax.swing.JMenuItem();
        localizarArquivo = new javax.swing.JFileChooser();
        website = new javax.swing.JLabel();
        
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(500, 600));

        labelServidor.setText("Endereço do servidor:");

        labelPorta.setText("Porta:");

        textServidor.setText("localhost");

        textPorta.setText("6970");

        javax.swing.GroupLayout panelConexaoLayout = new javax.swing.GroupLayout(panelConexao);
        panelConexao.setLayout(panelConexaoLayout);
        panelConexaoLayout.setHorizontalGroup(
            panelConexaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConexaoLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(labelServidor, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textServidor, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(labelPorta, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textPorta, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelConexaoLayout.setVerticalGroup(
            panelConexaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConexaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelConexaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelServidor)
                    .addComponent(labelPorta)
                    .addComponent(textServidor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textPorta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        textNomeAndMsg.addKeyListener(new KeyAdapter() {
            public void keyPressed(final KeyEvent e) {
                int key = e.getKeyCode();
                if (key == KeyEvent.VK_ENTER) {
                    enviar();
                }
            }
        });
        textNomeAndMsg.setText("Anônimo");

        labelNome.setText("Digite seu nome aqui");

        buttonEnviar.setText("Enviar");
        buttonEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEnviarActionPerformed(evt);
            }
        });
        
        localizarArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	localizarArquivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelNorteLayout = new javax.swing.GroupLayout(panelNorte);
        panelNorte.setLayout(panelNorteLayout);
        panelNorteLayout.setHorizontalGroup(
            panelNorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelConexao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelNorteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelNorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textNomeAndMsg))
                .addGap(18, 18, 18)
                .addComponent(buttonEnviar)
                .addContainerGap())
        );
        panelNorteLayout.setVerticalGroup(
            panelNorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelNorteLayout.createSequentialGroup()
                .addComponent(panelConexao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(labelNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelNorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textNomeAndMsg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonEnviar))
                .addContainerGap())
        );

        textChat.setText("Bem-vindo a sala de Chat!\n");
        textChat.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setViewportView(textChat);

        model = new DefaultListModel<String>();
        listaUserOnline.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        listaUserOnline.addMouseListener(new MouseListener() {
			
			@Override
			public void mouseReleased(MouseEvent e) {
				
			}
			
			@Override
			public void mousePressed(MouseEvent e) {
				
			}
			
			@Override
			public void mouseExited(MouseEvent e) {
				
			}
			
			@Override
			public void mouseEntered(MouseEvent e) {
				
			}
			
			@Override
			public void mouseClicked(MouseEvent e) {
				userSelecionado = (String) listaUserOnline.getSelectedValue();
				
			}
		});
        listaUserOnline.setModel(model);
        
        website.setText("<html> Website : <a href=\"\">http://www.google.com/</a></html>");
		website.setCursor(new Cursor(Cursor.HAND_CURSOR));
		textChat.add(website); 

        javax.swing.GroupLayout panelListaUserLayout = new javax.swing.GroupLayout(panelListaUser);
        panelListaUser.setLayout(panelListaUserLayout);
        panelListaUserLayout.setHorizontalGroup(
            panelListaUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(panelListaUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelListaUserLayout.createSequentialGroup()
                    .addComponent(listaUserOnline, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        panelListaUserLayout.setVerticalGroup(
            panelListaUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(panelListaUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(listaUserOnline, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelChatLayout = new javax.swing.GroupLayout(panelChat);
        panelChat.setLayout(panelChatLayout);
        panelChatLayout.setHorizontalGroup(
            panelChatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelChatLayout.createSequentialGroup()
                .addComponent(panelListaUser, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelChatLayout.setVerticalGroup(
            panelChatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelChatLayout.createSequentialGroup()
                .addGroup(panelChatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelListaUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        buttonLogin.setText("Login");
        buttonLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLoginActionPerformed(evt);
            }
        });

        buttonLogout.setText("Logout");
        buttonLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLogoutActionPerformed(evt);
            }
        });

        buttonOnlines.setText("Usuários Online");
        buttonOnlines.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOnlinesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelSulLayout = new javax.swing.GroupLayout(panelSul);
        panelSul.setLayout(panelSulLayout);
        panelSulLayout.setHorizontalGroup(
            panelSulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSulLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonLogin)
                .addGap(61, 61, 61)
                .addComponent(buttonLogout)
                .addGap(71, 71, 71)
                .addComponent(buttonOnlines)
                .addGap(113, 113, 113))
        );
        panelSulLayout.setVerticalGroup(
            panelSulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSulLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonLogin)
                    .addComponent(buttonLogout)
                    .addComponent(buttonOnlines))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("Usuário Online: ");
        
        jMenu.setText("Arquivo");

        menuEnviar.setText("Enviar");
        menuEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEnviarActionPerformed(evt);
            }
        });
        jMenu.add(menuEnviar);
        jMenuBar1.add(jMenu);
        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelSul, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelChat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(panelNorte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelNorte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelChat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelSul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLoginActionPerformed
        nomeUsuario = textNomeAndMsg.getText().trim();
        if(nomeUsuario.length() == 0)
                return;
        String servidor = textServidor.getText().trim();
        if(servidor.length() == 0)
                return;
        String numeroDaPorta = textPorta.getText().trim();
        if(numeroDaPorta.length() == 0)
                return;
        int porta = 0;
        try {
                porta = Integer.parseInt(numeroDaPorta);
        }
        catch(Exception en) {
                return;
        }

        cliente = new Cliente(servidor, porta, nomeUsuario, this);

        if(!cliente.iniciar()) 
                return;
        textNomeAndMsg.setText("");
        labelNome.setText("Digite sua mensagem abaixo");
        conectado = true;

        buttonLogin.setEnabled(false);
        buttonLogout.setEnabled(true);
        buttonOnlines.setEnabled(true);
        textServidor.setEditable(false);
        textPorta.setEditable(false);
        //cliente.enviarMensagem(new Mensagem(Mensagem.LOGIN, nomeUsuario, ""));
        model.addElement("Todos");
    }//GEN-LAST:event_buttonLoginActionPerformed

    private void buttonLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLogoutActionPerformed
        cliente.enviarMensagem(new Mensagem(Mensagem.LOGOUT, nomeUsuario, ""));
        model.removeAllElements();
    }//GEN-LAST:event_buttonLogoutActionPerformed

    private void buttonOnlinesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOnlinesActionPerformed
        cliente.enviarMensagem(new Mensagem(Mensagem.QUEMESTAON, "", ""));
    }//GEN-LAST:event_buttonOnlinesActionPerformed

    private void buttonEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEnviarActionPerformed
        enviar();
    }//GEN-LAST:event_buttonEnviarActionPerformed
    
    private void menuEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEnviarActionPerformed  
    	
    	localizarArquivo.setFileSelectionMode(JFileChooser.FILES_ONLY);
    	localizarArquivo.setDialogTitle("Escolha o arquivo");
        
        if (localizarArquivo.showOpenDialog(this) == JFileChooser.OPEN_DIALOG) {
        //int returnVal = localizarArquivo.showOpenDialog(this);
        //if (returnVal == JFileChooser.APPROVE_OPTION) {
        	//criarArquivo();
        } else {
            System.out.println("Acesso ao arquivo cancelado pelo usuário.");
        }
    }//GEN-LAST:event_buttonEnviarActionPerformed
    
    private void localizarArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEnviarActionPerformed                                              
    	criarArquivo();
    	//cliente.enviarMensagem(new Mensagem(Mensagem.ARQUIVO, nomeUsuario, ""));
    	enviarArquivoServidor();
    }//GEN-LAST:event_buttonEnviarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
    	
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new TelaClienteTeste(6970, "localhost").setVisible(true);
            }
        });
    }
    
    private void goWebsite() {
  		 website.addMouseListener(new MouseAdapter() {
  			 @Override public void mouseClicked(MouseEvent e) {
  				 try { 
  					 try {
  						 Desktop.getDesktop().browse(new URI("http://www.google.com/webhp?nomo=1&hl=fr"));
  						 } catch (IOException ex) {
  							 Logger.getLogger(TelaClienteTeste.class.getName()).log(Level.SEVERE, null, ex);
  							 }
  					 } catch (URISyntaxException ex) { }
  				 } 
  			 }); 
  		 } 
    
    public void criarArquivo(){
    	File file = localizarArquivo.getSelectedFile();
        try {
          // What to do with the file, e.g. display it in a TextArea
        	enviarArquivo = true;
        	addUser("ARQUIVO");
        	FileInputStream fis;
        	
        	
        	byte[] bFile = new byte[(int) file.length()];
        	fis = new FileInputStream(file);
        	fis.read(bFile);
        	fis.close();
        	
        	long kbSize = file.length() / 1024;
        	
        	arquivo = new Arquivo();
        	arquivo.setConteudo(bFile);
        	arquivo.setDataHoraUpload(new Date());
        	arquivo.setNome(file.getName());
        	arquivo.setTamanhoKB(kbSize);
        	//arquivo.setDestino(servidorPadrao);
        	//arquivo.setPortaDestino(String.valueOf(portaPadrao));
        	//textChat.read( new FileReader( file.getAbsolutePath() ), null );
        } catch (IOException ex) {
          System.out.println("Houve um problema ao acessar o arquivo "+file.getAbsolutePath());
        }
    }
    
    public void enviar(){
        if(conectado && !textNomeAndMsg.getText().isEmpty()){
        	if(userSelecionado.equals("Todos")){
        		cliente.enviarMensagem(new Mensagem(Mensagem.MENSAGEM, nomeUsuario, userSelecionado, textNomeAndMsg.getText()));				
        	}else{
        		cliente.enviarMensagem(new Mensagem(Mensagem.PRIVADO, nomeUsuario, userSelecionado, textNomeAndMsg.getText()));
        	}
        	textNomeAndMsg.setText("");
        }
    }
    
    public void append(String str) {
        textChat.setText(textChat.getText() + str);
        goWebsite();
    }
    
    public void privado(String str) {
    	StyledDocument doc = textChat.getStyledDocument();
        Style style = textChat.addStyle("mudaCor", null);
        StyleConstants.setForeground(style, Color.RED);

        try { 
            doc.insertString(doc.getLength(), "Você disse: " + str + "\n",style); }
        catch(BadLocationException e){}
        /*textChat.setText(textChat.getText() + str);
        goWebsite();*/
    }
     
     public void addUser(String str) {
        model.addElement(str);
    }
     
     public void removeUser(String str) {
         model.removeElement(str);
     }
     
    public void connectionFailed() {
        buttonLogin.setEnabled(true);
        buttonLogout.setEnabled(false);
        buttonOnlines.setEnabled(false);
        labelNome.setText("Digite seu nome de usuário abaixo");
        textNomeAndMsg.setText("Anônimo");
        textPorta.setText("" + portaPadrao);
        textServidor.setText(servidorPadrao);
        textServidor.setEditable(false);
        textPorta.setEditable(false);
        conectado = false;
	}
    
    private void enviarArquivoServidor(){
        if (validaArquivo()){
                	 /*Socket socket = new Socket(servidorPadrao,
                			 portaPadrao);
                           BufferedOutputStream bf = new BufferedOutputStream(socket.getOutputStream());
                         */  
                           byte[] bytea = serializarArquivo();
                           Mensagem msg = new Mensagem(Mensagem.ARQUIVO, nomeUsuario, "");
                           msg.setBytea(bytea);
                           cliente.enviarMensagem(msg);
                           /*bf.write(bytea);
                           bf.flush();
                          bf.close();
                          socket.close();*/
        }
}

private byte[] serializarArquivo(){
        try {
                 ByteArrayOutputStream bao = new ByteArrayOutputStream();
                 ObjectOutputStream ous;
                 ous = new ObjectOutputStream(bao);
                 ous.writeObject(arquivo);
                 return bao.toByteArray();
        } catch (IOException e) {
                 e.printStackTrace();
        }

        return null;
}

private boolean validaArquivo(){
        if (arquivo.getTamanhoKB() > tamanhoPermitidoKB){
                 JOptionPane.showMessageDialog(this,
                                    "Tamanho máximo permitido atingido ("+(tamanhoPermitidoKB/1024)+")");
                 return false;
        }else{
                 return true;
        }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel website;
    private javax.swing.JButton buttonEnviar;
    private javax.swing.JButton buttonLogin;
    private javax.swing.JButton buttonLogout;
    private javax.swing.JButton buttonOnlines;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel labelPorta;
    private javax.swing.JLabel labelServidor;
    private javax.swing.JList<String> listaUserOnline;
    private javax.swing.JPanel panelChat;
    private javax.swing.JPanel panelConexao;
    private javax.swing.JPanel panelListaUser;
    private javax.swing.JPanel panelNorte;
    private javax.swing.JPanel panelSul;
    private javax.swing.JTextPane textChat;
    private javax.swing.JTextField textNomeAndMsg;
    private javax.swing.JTextField textPorta;
    private javax.swing.JTextField textServidor;
    private javax.swing.JFileChooser localizarArquivo;
    private javax.swing.JMenuItem menuEnviar;
    private javax.swing.JMenu jMenu;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables

    public Boolean getConectado() {
        return conectado;
    }

    public void setConectado(Boolean conectado) {
        this.conectado = conectado;
    }

    public Integer getPortaPadrao() {
        return portaPadrao;
    }

    public void setPortaPadrao(Integer portaPadrao) {
        this.portaPadrao = portaPadrao;
    }

    public String getServidorPadrao() {
        return servidorPadrao;
    }

    public void setServidorPadrao(String servidorPadrao) {
        this.servidorPadrao = servidorPadrao;
    }

    public Cliente getCliente() {
        return cliente;
    }

    public void setCliente(Cliente cliente) {
        this.cliente = cliente;
    }

    public DefaultListModel<String> getModel() {
        return model;
    }

    public void setModel(DefaultListModel<String> model) {
        this.model = model;
    }

	public String getUserSelecionado() {
		return userSelecionado;
	}

	public void setUserSelecionado(String userSelecionado) {
		this.userSelecionado = userSelecionado;
	}

	public String getNomeUsuario() {
		return nomeUsuario;
	}

	public void setNomeUsuario(String nomeUsuario) {
		this.nomeUsuario = nomeUsuario;
	}

	public javax.swing.JLabel getjLabel1() {
		return jLabel1;
	}

	public void setjLabel1(javax.swing.JLabel jLabel1) {
		this.jLabel1 = jLabel1;
	}

	/**
	 * @return the enviarArquivo
	 */
	public Boolean getEnviarArquivo() {
		return enviarArquivo;
	}

	/**
	 * @param enviarArquivo the enviarArquivo to set
	 */
	public void setEnviarArquivo(Boolean enviarArquivo) {
		this.enviarArquivo = enviarArquivo;
	}
}
